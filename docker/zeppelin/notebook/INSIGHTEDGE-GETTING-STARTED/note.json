{"paragraphs":[{"text":"%md\n> Exploring data, traning a model and making predictions\n\n## Welcome to InsightEdge Getting started.\n\n##### We will use flight delay data to make predictions on which flights are likely to get delayed.\n##### We do the following steps:\n* Fetching data and loading it into the platform\n* Exproring the data via Spark and SQL queries\n* Enriching the data and processing it to get the relevant feature vector\n* Build and train it an ML model for prediction of flight delays\n* Test the model with real data\n\n##### You can run the code yourself. _(click `Run` button in each paragraph from top to bottom)_\n\n#### Fitting the data to ML model:\nWe are looking to get a binary prediction on weather our flight will be delayed or not.\nThere are many ML models that can be evaluted to try and find the model that is best suited for this task. In our case we will focus on a single model that typicall peforms well on such problems - `Random (Decision) Forest`. \nFlight delays are measured in minutes, positive number is the delay in minutes while negative number indicate a flight that was early.\nWe will use data such as the month, day and departure time as well as origin and destination airports as features we will feed into an ML model, in our case, Random Forest, to train it for best accuracy. \nWe will also supplement the feature vector with weather related data such as rain, wind and temperature. \n\n##### We will use:\n*2017 data for training our model\n*2018 data for evaluating our model accuracy\n*Then we will stream 2019 data and predict if the flight will get delayed.","user":"anonymous","dateUpdated":"2019-09-26T06:17:06+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<blockquote>\n  <p>Exploring data, traning a model and making predictions</p>\n</blockquote>\n<h2>Welcome to InsightEdge Getting started.</h2>\n<h5>We will use flight delay data to make predictions on which flights are likely to get delayed.</h5>\n<h5>We do the following steps:</h5>\n<ul>\n  <li>Fetching data and loading it into the platform</li>\n  <li>Exproring the data via Spark and SQL queries</li>\n  <li>Enriching the data and processing it to get the relevant feature vector</li>\n  <li>Build and train it an ML model for prediction of flight delays</li>\n  <li>Test the model with real data</li>\n</ul>\n<h5>You can run the code yourself. <em>(click <code>Run</code> button in each paragraph from top to bottom)</em></h5>\n<h4>Fitting the data to ML model:</h4>\n<p>We are looking to get a binary prediction on weather our flight will be delayed or not.<br/>There are many ML models that can be evaluted to try and find the model that is best suited for this task. In our case we will focus on a single model that typicall peforms well on such problems - <code>Random (Decision) Forest</code>.<br/>Flight delays are measured in minutes, positive number is the delay in minutes while negative number indicate a flight that was early.<br/>We will use data such as the month, day and departure time as well as origin and destination airports as features we will feed into an ML model, in our case, Random Forest, to train it for best accuracy.<br/>We will also supplement the feature vector with weather related data such as rain, wind and temperature. </p>\n<h5>We will use:</h5>\n<p>*2017 data for training our model<br/>*2018 data for evaluating our model accuracy<br/>*Then we will stream 2019 data and predict if the flight will get delayed.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569132212501_1644544188","id":"20190821-232519_1860033659","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:17:06+0000","dateFinished":"2019-09-26T06:17:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4246"},{"text":"%md\n##### First Phase:\nFetch the relevant data.\nIn our case, we have the data in CSV file format. (In case the data is not available, it can be downloaded from: <https://insightedge-gettingstarted.s3.amazonaws.com/flightdelays20172018.csv.zip>)\nOnce loaded, explore the data with some SQL statements to understand the schema and how it behaves.","user":"anonymous","dateUpdated":"2019-09-26T06:17:06+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h5>First Phase:</h5>\n<p>Fetch the relevant data.<br/>In our case, we have the data in CSV file format. (In case the data is not available, it can be downloaded from: <a href=\"https://insightedge-gettingstarted.s3.amazonaws.com/flightdelays20172018.csv.zip\">https://insightedge-gettingstarted.s3.amazonaws.com/flightdelays20172018.csv.zip</a>)<br/>Once loaded, explore the data with some SQL statements to understand the schema and how it behaves.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1569132212510_-242278630","id":"20190826-021256_100418820","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:17:06+0000","dateFinished":"2019-09-26T06:17:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4247"},{"text":"%define\npackage model.v1\n\nimport com.gigaspaces.metadata._\nimport com.gigaspaces.metadata.index.SpaceIndexType;\nimport java.lang\nimport scala.beans.{BeanProperty}\nimport org.insightedge.scala.annotation._\nimport org.insightedge.spark.implicits.all._\n\n\n//Describe the data as Scala Case Class\n\ncase class FlightDelaysWithWeather(\n  @BeanProperty \n  @SpaceId\n  var id: String,\n  @BeanProperty \n  @SpaceIndex\n  var carrier: String,\n  @BeanProperty \n  @SpaceIndex\n  var flight_number: String,\n  @SpaceIndex\n  @BeanProperty \n  var year: Integer,\n  @BeanProperty \n  var month: String,\n  @BeanProperty \n  var dayofMonth: String,\n  @BeanProperty \n  var dayOfWeek: String,\n  @BeanProperty \n  var crsDepTime: String,\n  @SpaceIndex\n  @BeanProperty \n  var depDelay15: java.lang.Double,\n  @BeanProperty \n  var depDelay: java.lang.Double,\n  @SpaceIndex\n  @BeanProperty \n  var origin: String,\n  @BeanProperty \n  var dest: String,\n  @BeanProperty \n  var awnd: String,\n  @BeanProperty \n  var prcp: String,\n  @BeanProperty \n  var snow: String,\n  @BeanProperty \n  var tmax: String,\n  @BeanProperty \n  var tmin: String,\n  @BeanProperty \n  var cancelled: String,\n  @BeanProperty \n  var date: Integer,\n  @BeanProperty \n  var prediction: String) {\n  def this() = this(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null)\n  def generate_id() = {id = \"%04d:%s:%s:%s:%s:%s\".format(year, month, dayofMonth, dayOfWeek, crsDepTime, flight_number)}\n}\n\n","user":"anonymous","dateUpdated":"2019-09-26T06:17:06+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@3b7f5275\n"}]},"apps":[],"jobName":"paragraph_1569132212513_-876466996","id":"20190901-004515_1420239656","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:17:07+0000","dateFinished":"2019-09-26T06:17:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4248"},{"title":"Load Flight Delay data","text":"%spark\n//explore data before we continue\n//WN - SouthWest, OO - SkyWest Airlines Inc., \"EV\" - ExpressJet Airlines LLC, \"B6\" - JetBlue, \"AS\" Alaska Airlines Inc. \"NK\" - Spirit Air Lines\", \"F9\" - \"Frontier Airlines Inc.\"\nval airlines = List (\"UA\",\"OO\",\"B6\",\"NK\", \"F9\")\n// ORD - Chicago, DFW - Dallas, DEN - Denver, SFO - San Francisco\nval airports = List (\"ORD\",\"DFW\",\"DEN\",\"SFO\")\nval flightDelaysDataFrame = sqlContext.read.option(\"header\", \"true\").option(\"inferschema\", \"true\").csv(\"/opt/gigaspaces/flightdelays20172018.csv\").filter($\"Reporting_Airline\".isin(airlines:_*)).filter($\"Origin\".isin(airports:_*)).filter($\"cancelled\" === 0.0).filter($\"DayofMonth\" < 20.0)\nflightDelaysDataFrame.printSchema()\n// Create a temp view that we can query by SQL\nflightDelaysDataFrame.createOrReplaceTempView(\"FlightDelays\")\n","user":"anonymous","dateUpdated":"2019-09-26T06:17:27+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Year: integer (nullable = true)\n |-- Month: integer (nullable = true)\n |-- DayofMonth: integer (nullable = true)\n |-- DayOfWeek: integer (nullable = true)\n |-- Reporting_Airline: string (nullable = true)\n |-- Tail_Number: string (nullable = true)\n |-- Flight_Number: integer (nullable = true)\n |-- Origin: string (nullable = true)\n |-- Dest: string (nullable = true)\n |-- CRSDepTime: integer (nullable = true)\n |-- DepDelay: double (nullable = true)\n |-- DepDel15: double (nullable = true)\n |-- cancelled: double (nullable = true)\n\nairlines: List[String] = List(UA, OO, B6, NK, F9)\nairports: List[String] = List(ORD, DFW, DEN, SFO)\nflightDelaysDataFrame: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Year: int, Month: int ... 11 more fields]\n"}]},"apps":[],"jobName":"paragraph_1569132212513_-398922180","id":"20190812-123228_1439056817","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:17:27+0000","dateFinished":"2019-09-26T06:18:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4249"},{"title":"Take a glance at the data","text":"%sql\nselect * from FlightDelays order by DepDelay Desc limit 5\n","user":"anonymous","dateUpdated":"2019-09-26T06:18:55+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"Year","visible":true,"width":150,"sort":{},"filters":[{}],"pinned":""},{"name":"Month","visible":true,"width":150,"sort":{},"filters":[{}],"pinned":""},{"name":"DayofMonth","visible":true,"width":150,"sort":{},"filters":[{}],"pinned":""},{"name":"DayOfWeek","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Reporting_Airline","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Tail_Number","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Origin","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Dest","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"CRSDepTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DepDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DepDel15","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"cancelled","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Year":"string","Month":"string","DayofMonth":"string","DayOfWeek":"string","Reporting_Airline":"string","Tail_Number":"string","Flight_Number":"string","Origin":"string","Dest":"string","CRSDepTime":"string","DepDelay":"string","DepDel15":"string","cancelled":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Year\tMonth\tDayofMonth\tDayOfWeek\tReporting_Airline\tTail_Number\tFlight_Number\tOrigin\tDest\tCRSDepTime\tDepDelay\tDepDel15\tcancelled\n2017\t3\t8\t3\tUA\tN213UA\t328\tDEN\tHNL\t1200\t1495.0\t1.0\t0.0\n2017\t6\t13\t2\tOO\tN898SK\t4478\tORD\tSLC\t754\t1437.0\t1.0\t0.0\n2018\t1\t3\t3\tOO\tN464SW\t3128\tDFW\tPIB\t1230\t1416.0\t1.0\t0.0\n2018\t3\t2\t5\tOO\tN145SY\t5483\tDFW\tSFO\t1931\t1396.0\t1.0\t0.0\n2018\t2\t9\t5\tOO\tN712SK\t2999\tDFW\tASE\t1640\t1377.0\t1.0\t0.0\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1569132212514_-702468098","id":"20190818-160607_881523454","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:18:55+0000","dateFinished":"2019-09-26T06:20:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4250"},{"title":"Total number of Flight vs. number of Delayed flights by Origin Airport","text":"%sql\n\nselect Origin, count(*) as TotalFlights, SUM(DepDel15) as DelayedFlightsCount from FlightDelays group by Origin order by  DelayedFlightsCount/TotalFlights desc limit 15\n","user":"anonymous","dateUpdated":"2019-09-26T06:21:30+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Origin":"string","TotalFlights":"string","DelayedFlights":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Origin","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"TotalFlights","index":1,"aggr":"sum"},{"name":"DelayedFlightsCount","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Origin\tTotalFlights\tDelayedFlightsCount\nSFO\t127175\t27298.0\nORD\t203768\t43373.0\nDFW\t27611\t5154.0\nDEN\t166684\t28475.0\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1569132212515_-111721668","id":"20190814-105136_1961434103","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:20:05+0000","dateFinished":"2019-09-26T06:20:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4251"},{"title":"Airport popularity","text":"%sql\nselect origin, count(*) as vol from  FlightDelays group by origin order by vol desc","user":"anonymous","dateUpdated":"2019-09-26T06:20:49+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"origin":"string","vol":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tvol\nORD\t203768\nDEN\t166684\nSFO\t127175\nDFW\t27611\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1569132212516_43692228","id":"20190814-130922_1525095978","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:20:49+0000","dateFinished":"2019-09-26T06:21:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4252"},{"text":"%md\n\n#### Second Phase:\n* Configure an InsightEdge context\n* Provide InsightEdge with type information on the data we loaded\n* Load the data to the InsightEdge inmemory store (This will speed up data access)\n","user":"anonymous","dateUpdated":"2019-09-26T06:21:28+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Second Phase:</h4>\n<ul>\n  <li>Configure an InsightEdge context</li>\n  <li>Provide InsightEdge with type information on the data we loaded</li>\n  <li>Load the data to the InsightEdge inmemory store (This will speed up data access)</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1569132212517_439314661","id":"20190826-022330_1347205260","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:21:28+0000","dateFinished":"2019-09-26T06:21:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4253"},{"title":"Initialize Spark with InsightEdge context ","text":"%spark\n\nimport org.insightedge.spark.implicits.all._\nimport org.insightedge.spark.context.InsightEdgeConfig\n\n//Change space name here if not working with default\nval ieConfig = new InsightEdgeConfig(\"demo\")\n\nsc.initializeInsightEdgeContext(ieConfig)\n","user":"anonymous","dateUpdated":"2019-09-26T06:21:28+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.insightedge.spark.implicits.all._\nimport org.insightedge.spark.context.InsightEdgeConfig\nieConfig: org.insightedge.spark.context.InsightEdgeConfig = InsightEdgeConfig(demo,None,None)\nres2: org.apache.spark.SparkContext = org.apache.spark.SparkContext@5c506ff3\n"}]},"apps":[],"jobName":"paragraph_1569132212518_-1472339429","id":"20190814-133229_440702495","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:21:29+0000","dateFinished":"2019-09-26T06:21:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4254"},{"title":"Write the FlightDelay data to the in memory store","text":"%spark\nimport org.apache.spark.sql.SaveMode\nimport model.v1._\n\nprint(\"Writing to in-memory store \" + flightDelaysDataFrame.count + \"entries\")\n\nval flightDelaysRDD = flightDelaysDataFrame.map{rec =>  val fdww = FlightDelaysWithWeather(null, \"\"+rec.getAs(\"Reporting_Airline\") , \"\"+rec.getAs(\"Flight_Number\") ,(\"\"+rec.getAs(\"Year\")).toInt,\"\"+rec.getAs(\"Month\"),\"\"+rec(2),\"\"+rec.getAs(\"DayOfWeek\"),\"\"+rec.getAs(\"CRSDepTime\"),(\"\"+rec.getAs(\"DepDel15\")).toDouble,(\"\"+rec.getAs(\"DepDelay\")).toDouble,\"\"+rec.getAs(\"Origin\"),\"\"+rec.getAs(\"Dest\"), null, null, null, null, null, null, null, null)\n                                                        fdww.generate_id()\n                                                        fdww\n                                                }\nsc.grid.clear(\"FlightDelaysWithWeather\")\nflightDelaysRDD.rdd.saveToGrid()","user":"anonymous","dateUpdated":"2019-09-26T06:22:40+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Writing to in-memory store 525238entries2019-09-26 06:23:18,761 CONFIG [com.gigaspaces.logger] - Log file: /opt/gigaspaces/logs/2019-09-26~06.23-gigaspaces-service-10.4.1.245-2344.log\nimport org.apache.spark.sql.SaveMode\nimport model.v1._\nflightDelaysRDD: org.apache.spark.sql.Dataset[model.v1.FlightDelaysWithWeather] = [id: string, carrier: string ... 18 more fields]\n"}]},"apps":[],"jobName":"paragraph_1569132212519_-918109107","id":"20190814-141337_971258379","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:22:40+0000","dateFinished":"2019-09-26T06:24:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4255"},{"title":"Query the data directly from the in memory grid","text":"%insightedge_jdbc\n\nselect id, \"year\", \"month\", dayofMonth, dayOfWeek, crsDepTime, flight_number, origin, dest, depDelay from FlightDelaysWithWeather limit 5\n","user":"anonymous","dateUpdated":"2019-09-26T06:27:31+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id":"string","year":"string","month":"string","dayofMonth":"string","dayOfWeek":"string","crsDepTime":"string","flight_number":"string","origin":"string","dest":"string","depDelay":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"id\tyear\tmonth\tdayofMonth\tdayOfWeek\tcrsDepTime\tflight_number\torigin\tdest\tdepDelay\n2017:1:12:4:2227:278\t2017\t1\t12\t4\t2227\t278\tSFO\tFLL\t86.0\n2017:1:2:1:800:434\t2017\t1\t2\t1\t800\t434\tSFO\tBOS\t-12.0\n2017:1:5:4:1310:534\t2017\t1\t5\t4\t1310\t534\tSFO\tBOS\t2.0\n2017:1:17:2:1130:578\t2017\t1\t17\t2\t1130\t578\tSFO\tFLL\t-7.0\n2017:1:12:4:2355:622\t2017\t1\t12\t4\t2355\t622\tDEN\tDTW\t-3.0\n"}]},"apps":[],"jobName":"paragraph_1569132212521_-1883264937","id":"20190814-163709_2074768724","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-26T06:27:30+0000","dateFinished":"2019-09-26T06:27:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4256"},{"title":"Access the in-memory store with predicate push-down for better performance","text":"%spark\n\nval airports = List (\"ORD\",\"DFW\",\"DEN\",\"SFO\")\n\n\nval origin =  z.select(\"origin\", Seq((\"ORD\",\"O'hare International (chicago)\"),\n                                                  (\"DFW\",\"Dallas International\"),\n                                                  (\"DEN\", \"Denver\"), \n                                                  (\"SFO\", \"San Francissco\")))\nval filtered_df = spark.read.grid[FlightDelaysWithWeather].where(\"depDelay > 0 and origin = '\" + origin  + \"'\")\nfiltered_df.describe(\"depDelay\").show\n","user":"anonymous","dateUpdated":"2019-09-25T13:28:41+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"runOnSelectionChange":true,"title":true,"results":{},"enabled":true},"settings":{"params":{"carrier":"ORD","origin":"SFO","day":""},"forms":{"origin":{"type":"Select","options":[{"value":"ORD","displayName":"O'hare International (chicago)","$$hashKey":"object:4579"},{"value":"DFW","displayName":"Dallas International","$$hashKey":"object:4580"},{"value":"DEN","displayName":"Denver","$$hashKey":"object:4581"},{"value":"SFO","displayName":"San Francissco","$$hashKey":"object:4582"}],"name":"origin","displayName":"origin","defaultValue":"","hidden":false,"$$hashKey":"object:4567"}}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----------------+\n|summary|         depDelay|\n+-------+-----------------+\n|  count|            45388|\n|   mean|43.67257865515114|\n| stddev|62.62244949685084|\n|    min|              1.0|\n|    max|           1241.0|\n+-------+-----------------+\n\nairports: List[String] = List(ORD, DFW, DEN, SFO)\norigin: Object = SFO\nfiltered_df: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, carrier: string ... 18 more fields]\n"}]},"apps":[],"jobName":"paragraph_1569132212521_1270934321","id":"20190825-225726_1724838668","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-25T13:28:42+0000","dateFinished":"2019-09-25T13:28:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4257"},{"text":"%insightedge_jdbc\n\nselect flight_number,  (1 -sum( depDelay15)/count(depDelay15)) as on_time_ratio, max(depDelay) as max_delay from FlightDelaysWithWeather group by flight_number  having   count(depDelay15) > 100 order by on_time_ratio desc  limit 10\n","user":"anonymous","dateUpdated":"2019-09-25T13:28:47+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"flight_number":"string","on_time_ratio":"string","max_delay":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"flight_number","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"on_time_ratio","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"flight_number\ton_time_ratio\tmax_delay\n2405\t0.9708994708994709\t215.0\n2107\t0.9705882352941176\t78.0\n44\t0.9606741573033708\t518.0\n2192\t0.9570552147239264\t111.0\n261\t0.9553264604810997\t138.0\n867\t0.9534368070953437\t167.0\n237\t0.9503205128205128\t207.0\n1896\t0.9487179487179487\t1086.0\n1192\t0.9464882943143813\t134.0\n1187\t0.946058091286307\t270.0\n"}]},"apps":[],"jobName":"paragraph_1569132212522_2016548109","id":"20190908-004421_1841609863","dateCreated":"2019-09-22T06:03:32+0000","dateStarted":"2019-09-25T13:28:47+0000","dateFinished":"2019-09-25T13:28:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4258"},{"user":"anonymous","dateUpdated":"2019-09-25T13:28:53+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1569132212533_1724620489","id":"20190821-004202_1739500621","dateCreated":"2019-09-22T06:03:32+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4259"}],"name":"Getting Started/FlightDelays","id":"INSIGHTEDGE-GETTING-STARTED","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"insightedge_jdbc:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}