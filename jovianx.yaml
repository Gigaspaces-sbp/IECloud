# Memory Intensive - n1-highmem-8 (?)
# 32GB / 4 Core
# General Purpose - n1-standard-8
# 32GB / 8 Core
# CPU Intensive - n1-highcpu-16 (n1-highcpu-32)
# 32GB / 16 Cores



# JovainX API Compatibility
# v1
jovianx_api_version: v1

# Name of this SaaS application
# string
application_name: InsightEdge

# version of this JovianX blueprint
# semantic versioning
version: 0.0.25

main_endpoint_component: insightedge
application_launch_timeout:
  tries_count: 120
  seconds_between_tries: 5

components:
  - name: flightdelays
    version: 1.0.0
    provider: helm_chart
    helm_chart_name: flightdelays
    helm_set:
      - key: feeder.kafka.url
        value: "{{ account://components/flightdelays/helm_release_name }}-kafka-headless:9092"
      - key: feeder.enabled
        value: true
      - key: kafka.enabled
        value: true
      - key: kafka.zookeeper.url
        value: "{{ account://components/insightedge/helm_release_name }}-insightedge-manager-hs"
  - name: grafana
    version: 1.0.0
    provider: helm_chart
    helm_chart_name: grafana
    helm_set:
      - key: stam
        value: key
  - name: insightedge
    version: 1.0.0
    provider: helm_chart 
    helm_chart_name: insightedge
    helm_set:
      - key: pu.resources.limits.memory
        value: 2048Mi
      - key: pu.spaceName
        value: flights_space
      - key: zeppelin.kafka.url
        value: "{{ account://components/flightdelays/helm_release_name }}-kafka-headless:9092"
      - key: pu.metrics.influxdb_ip
        value: "{{ account://components/grafana/helm_release_name }}-influxdb"
      - key: pu.metrics.grafana_ip
        value: "{{ account://components/grafana/helm_release_name }}-grafana"
    endpoints:
      - name: 'Getting Started app'
        service_name: "{{ account://components/insightedge/helm_release_name }}-insightedge-zeppelin-service"
        port: 9090
        path: /#/notebook/INSIGHTEDGE-GETTING-STARTED
        type: main_entry_point
        dns: 'zeppelin.{{ account://end_company }}.cloud.gigaspaces.com'
      - name: 'Grafana Monitoring'
        port: 80
        type: entry_point
        dns: 'grafana.{{ account://end_company }}.cloud.gigaspaces.com'
        path: /
        service_name: "{{ account://components/grafana/helm_release_name }}-grafana"
      - name: 'Services UI'
        port: 8090
        type: entry_point
        dns: 'srvui.{{ account://end_company }}.cloud.gigaspaces.com'
        path: /ui
        service_name: "{{ account://components/insightedge/helm_release_name }}-insightedge-manager-service"

  - name: pu_jar
    version: 1.0.0
    provider: helm_chart 
    helm_chart_name: insightedge-pu
    helm_set:
      - key: insightedge-pu.resources.limits.memory
        value: 1024Mi
      - key: metrics.influxdb_ip
        value: "{{ account://components/grafana/helm_release_name }}-influxdb"
      - key: metrics.grafana_ip
        value: "{{ account://components/grafana/helm_release_name }}-grafana"
      - key: space.name
        value: flights_space
      - key: name
        value: flights_feeder
      - key: manager.name
        value: "{{ account://components/insightedge/helm_release_name }}"
      - key: resourceUrl
        value: "https://insightedge-gettingstarted.s3.amazonaws.com/kafka-pers-feeder.jar"
      - key: lookup_group
        value: "{{ account://components/insightedge/helm_release_name }}-group"
      - key: java.options
        value: "-Dorg.openspaces.pu.container.support.level=DEBUG -Dcom.gs.logging.debug=true -Dcom.gs.kafka_url={{ account://components/flightdelays/helm_release_name }}-kafka-headless:9092"


settings_descriptors:
#  - name: cloudProvider
#    display: 'Cloud Provider'
#    input_type: radio
#    default: gcp
#    description_title: 'Choose your provider'
#    select_options:
#      - name: azure
#        display: 'Microsoft Azure'
#        img: 'https://www.mongodb.com/assets/images/cloud/atlas/logos/azure.png'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: cloudProvider
#                value: azure
#          - name: insightedge
#            helm_set:
#              - key: enable
#                value: azure
#      - name: aws
#        display: 'Amazon Web Services'
#        img: 'https://www.mongodb.com/assets/images/cloud/atlas/logos/aws.png'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: cloudProvider
#                value: aws
#          - name: insightedge
#            helm_set:
#              - key: enable
#                value: aws
#      - name: gcp
#        display: 'Google Cloud Platform'
#        img: 'https://www.mongodb.com/assets/images/cloud/atlas/logos/gcp.png'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: cloudProvider
#                value: gcp
#          - name: insightedge
#            helm_set:
#              - key: enable
#                value: gcp
#
#  - name: gcp_region
#    display: "GCP Region"
#    dependency:
#      name: cloudProvider
#      values:
#        - gcp
#    input_type: select
#    default: OREGON
#    select_options:
#      - name: OREGON
#        display: 'OREGON(us-west1)'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: gcp_region
#                value: us-west1
#      - name: LOS_ANGELES
#        display: 'LOS ANGELES(us-west2)'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: gcp_region
#                value: us-west2
#      - name: IOWA
#        display: 'IOWA(us-central1)'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: gcp_region
#                value: us-central1
#      - name: SOUTH_CAROLINA
#        display: 'SOUTH CAROLINA(us-east1)'
#        components:
#          - name: insightedge
#            helm_set:
#              - key: gcp_region
#                value: us-east1
#
  - name: workload_type
    display: "Workload type"
    input_type: select
    default: general
    select_options:
      - name: general
        display: 'General-purpose'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: general
      - name: compute
        display: 'Compute-optimized'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: compute
      - name: memory
        display: 'Memory-optimized'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: memory


  - name: ram
    display: "Memory Allocation"
    input_type: select
    default: 8gb
    select_options:
      - name: 8gb
        display: '8GB'
        components:
          - name: insightedge
            helm_set:
              - key: pu.resources.limits.memory
                value: 8192Mi
      - name: 16gb
        display: '16GB'
        components:
          - name: insightedge
            helm_set:
              - key: ram
                value: 16384Mi
      - name: 32gb
        display: '32GB'
        components:
          - name: insightedge
            helm_set:
              - key: ram
                value: 32768Mi

  - name: ha
    display: 'High Availability'
    input_type: checkbox
    default: false
    select_options:
      - name: true
        components:
          - name: insightedge
            helm_set:
              - key: manager.ha #we used "short-names" (not insightedge-manager) because _helpers.tpl has ".Values.nameOverride"
                value: true
      - name: false
        components:
          - name: insightedge
            helm_set:
              - key: manager.ha
                value: false

  - name: memoryxtend
    display: 'MemoryXtend'
    input_type: checkbox
    default: false
    description_title: 'MemoryXtend'
    description_explanations: 'The MemoryXtend storage model allows an external storage medium to store the Space data'
    select_options:
      - name: true
        components:
          - name: insightedge
            helm_set:
              - key: pu.memoryXtendVolume.enabled
                value: true
      - name: false
        components:
          - name: insightedge
            helm_set:
              - key: pu.memoryXtendVolume.enabled
                value: false

  - name: storage_performance
    display: "Storage performance"
    dependency:
      name: memoryxtend
      values:
        - true    
    input_type: select
    default: general
    select_options:
      - name: general
        display: 'Standard persistent disks'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: general
      - name: ssd-persistent
        display: 'SSD persistent disks'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: ssd-persistent
      - name: ssd-scsi
        display: 'Local SSD (SCSI)'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: ssd-scsi
      - name: ssd-nvme
        display: 'Local SSD (NVMe)'
        components:
          - name: insightedge
            helm_set:
              - key: workload
                value: ssd-nvme
                

  - name: memoryxtend-storage
    display: 'MemoryXtend storage size'
    dependency:
      name: memoryxtend
      values:
        - true
    input_type: slider
    units: GB
    min_value: 1
    max_value: 2000
    step: 1
    default: 500
    components:
      - name: insightedge
        helm_set:
          - key: pu.memoryXtendVolume.volumeClaimTemplate.storage
  - name: use_case
    display: "Select pre-defined use-case"
    input_type: select
    default: flights_app
    select_options:
      - name: none
        display: 'None'
        components:
          - name: flightdelays
            helm_set:
            - key: feeder.enabled
              value: false
            - key: kafka.enabled
              value: false
      - name: flights_app
        display: 'Flight Delays'
        components:
          - name: flightdelays
            helm_set:
            - key: feeder.enabled
              value: false
            - key: kafka.enabled
              value: true
